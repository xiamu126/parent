<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sybd.znld.mapper.rbac.UserMapper">
    <insert id="insert" parameterType="com.sybd.znld.model.rbac.UserModel">
        insert user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            id,name,password,
            <if test=" lastLoginIp != null and lastLoginIp != '' ">last_login_ip,</if>
            <if test=" lastLoginTime != null ">last_login_time,</if>
            organization_id,status
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            #{id},#{name},#{password},
            <if test=" lastLoginIp != null and lastLoginIp != '' ">#{lastLoginIp},</if>
            <if test=" lastLoginTime != null ">#{lastLoginTime},</if>
            #{organizationId},#{status}
        </trim>
    </insert>

    <update id="updateById" parameterType="com.sybd.znld.model.rbac.UserModel">
        update user
        <set>
            <if test=" name != null and name != '' ">name = #{name},</if>
            <if test=" password != null and password != '' ">password = #{password},</if>
            <if test=" lastLoginIp != null and lastLoginIp != '' ">last_login_ip = #{lastLoginIp},</if>
            <if test=" lastLoginTime != null ">last_login_time=#{lastLoginTime},</if>
            <if test=" organizationId != null and organizationId != '' ">organization_id = #{organizationId},</if>
            <if test=" status != null">status = #{status},</if>
        </set>
        where id = #{id}
    </update>
    <update id="updatePasswordByName" parameterType="com.sybd.znld.model.rbac.UserModel">
        update user
        <set>
            <if test="password != null and password != '' ">password=#{password}</if>
        </set>
        where name = #{name};
    </update>
    <update id="updateByName" parameterType="com.sybd.znld.model.rbac.UserModel">
        update user
        <set>
            <if test=" password != null and password != '' ">password = #{password},</if>
            <if test=" lastLoginTime != null ">last_login_time=#{lastLoginTime},</if>
            <if test=" lastLoginIp != null and lastLoginIp != '' ">last_login_ip = #{lastLoginIp},</if>
            <if test=" organizationId != null and organizationId != '' ">organization_id = #{organizationId},</if>
            <if test=" status != null">status = #{status},</if>
        </set>
        where name = #{name};
    </update>

    <select id="selectById" resultType="com.sybd.znld.model.rbac.UserModel">
        select * from user where id = #{_parameter}
    </select>
    <select id="selectByName" resultType="com.sybd.znld.model.rbac.UserModel">
        select * from user where name = #{_parameter}
    </select>
    <select id="selectByOrganizationId" resultType="com.sybd.znld.model.rbac.UserModel">
        select * from user where organization_id = #{_parameter}
    </select>
    <select id="selectByNameAndPassword" resultType="com.sybd.znld.model.rbac.UserModel">
        select * from user where name=#{name} and password=#{password};
    </select>

    <select id="selectAuthPackByUserId" resultType="com.sybd.znld.model.rbac.dto.AuthPackByUser">
        select a.id as 'userId',
               c.name as 'roleName',
               e.name as 'authName',
               e.uri as 'authValue',
               g.oauth2_client_id as 'oauth2ClientId'
        from user as a
        left join user_role as b on a.id = b.user_id
        left join role as c on c.id = b.role_id
        left join role_auth as d on d.role_id = c.id
        left join authority as e on e.id = d.auth_id
        left join authority_group as f on f.id = e.authority_group_id
        left join organization as g on g.id = f.organization_id
        where a.id = #{userId} and e.status = 0 and a.status = 0;
    </select>

    <select id="selectRolesByUserId" resultType="com.sybd.znld.model.rbac.RoleModel">
        select c.* from user as a
        left join user_role as b on b.user_id = a.id
        left join role as c on c.id = b.role_id
        where a.id = #{_parameter}
    </select>
</mapper>