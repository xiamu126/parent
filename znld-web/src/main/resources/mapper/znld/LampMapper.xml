<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sybd.znld.service.znld.mapper.LampMapper">
    <select id="selectByDeviceId" resultType="com.sybd.znld.model.znld.LampModel">
        select * from lamp where device_id=#{_parameter}
    </select>

    <select id="selectAllDeviceIds" resultType="java.lang.Integer">
        select distinct device_id from lamp;
    </select>

    <select id="selectApiKeyByDeviceId" resultType="java.lang.String">
        select distinct api_key from lamp where device_id=#{_parameter};
    </select>

    <select id="selectImeiByDeviceId" resultType="java.lang.String">
        select distinct imei from lamp where device_id=#{deviceId};
    </select>

    <resultMap id="DeviceIdAndIMEI" type="com.sybd.znld.service.znld.dto.DeviceIdAndIMEI">
        <result column="deviceId" jdbcType="INTEGER" property="device_id"/>
        <result column="imei" jdbcType="VARCHAR" property="imei"/>
    </resultMap>
    <select id="selectAllDeviceIdAndIMEI" resultType="java.util.HashMap">
        select distinct device_id, imei from lamp;
    </select>

    <resultMap id="DeviceIdAndDeviceNames" type="com.sybd.znld.service.znld.dto.DeviceIdAndDeviceName">
        <result column="deviceId" jdbcType="INTEGER" property="device_id"/>
        <result column="deviceName" jdbcType="VARCHAR" property="device_name"/>
    </resultMap>
    <select id="selectDeviceIdAndDeviceNames" resultMap="DeviceIdAndDeviceNames">
        select distinct device_id, device_name from lamp;
    </select>

    <select id="selectCheckedResourceByDeviceId" resultType="com.sybd.znld.service.znld.dto.CheckedResource">
        select concat(obj_id, '_', obj_inst_id, '_',res_id) as dataStreamId, description from lamp as a
        left join lamp_resource as b on a.id = b.lamp_id
        left join onenet_resource as c on c.id = b.onenet_resource_id
        where device_id = #{_parameter} and c.status = 0;
    </select>
</mapper>
